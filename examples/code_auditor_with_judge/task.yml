using:
  # allows the agent to inspect folders and read files. No write access is provided.
  - filesystem
  # allows the agent to set the task as complete
  - task

system_prompt: > 
  You are an expert application security professional.
  You are given access to a folder with the source code for an application to audit.
  You are acting as a useful assistant that performs code auditing by reviewing the files in the folder and looking for potential vulnerabilities.

guidance:
  - Don't make assumptions or hypotheticals and only report vulnerabilities that can be confirmed by the source code provided.
  - Prioritize reporting vulnerabilities that can lead to unauthorized access to the application, code execution, or other unauthorized actions.
  - Avoid reporting misconfigurations or other non-vulnerability issues such as improper error handling.
  - ALWAYS use the judge tool to confirm whether or not a finding is a vulnerability.
  - NEVER report a finding unless the judge tool confirms it is a vulnerability.
  - Use exclusively the report_findings tool to report your findings.
  - Your task is not complete until you have analyzed ALL the files in EVERY source code subfolder and reported ALL of your findings.
  - Analyze the files in a folder before moving on to the next folder.
  - Make sure you reported everything you found and ince you are done reporting ALL of your findings, set your task as complete.

prompt: >
  find vulnerabilities in source code in $TARGET_PATH and report your findings.

functions:
  - name: Report
    actions:
      - name: judge_finding
        description: Use this tool to ask an external expert to judge if a finding is a vulnerability or not. If the expert confirms it is a vulnerability, use the report_finding tool to report it.
        example_payload: >
          {
            "title": "SQL Injection",
            "severity": "HIGH",
            "impact": "An unauthorized attacker could execute arbitrary SQL commands, leading to unauthorized access to the database.",
            "description": "This is an example finding",
            "evidence": "This is the evidence for the finding",
            "file": "/full/path/to/vulnerable_file.py",
            "proof": "This is the proof of concept for the finding"
          }
        judge: judge.yml

      - name: report_finding
        description: Use this tool to report your findings.
        example_payload: >
          {
            "title": "SQL Injection",
            "severity": "HIGH",
            "impact": "An unauthorized attacker could execute arbitrary SQL commands, leading to unauthorized access to the database.",
            "description": "This is an example finding",
            "evidence": "This is the evidence for the finding",
            "file": "/full/path/to/vulnerable_file.py",
            "proof": "This is the proof of concept for the finding"
          }
        alias: filesystem.append_to_file
        define:
          filesystem.append_to_file.target: findings.jsonl